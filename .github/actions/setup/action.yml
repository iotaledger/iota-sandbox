name: 'iota-sandbox-setup'
description: 'Setup IOTA Sandbox'
inputs:
  version:
    description: 'Sandbox Version to use'
    required: false
    default: 'latest'
  branch:
    description: 'Branch/tag/commit to use'
    required: false
  protocol_parameters:
    decsription: 'Path to custom protocol parameters file'
    required: false
runs:
  using: "composite"
  steps:
    - name: Check if a faucet profile is enabled
      id: faucet_check
      shell: bash
      run: |
        IFS=',' read -ra PROFILES <<< "${{ env.COMPOSE_PROFILES }}" # Split by ,
        FAUCET_ENABLED=false
        for i in "${PROFILES[@]}"; do
          i=$(echo "$i" | xargs)  # Trim leading and trailing whitespaces
          if [[ "$i" == "inx" || "$i" == "inx-faucet" ]]; then # Check if inx or inx-faucet profile is enabled
            FAUCET_ENABLED=true
            break
          fi
        done
        echo "::set-output name=is_faucet::${FAUCET_ENABLED}"
    - name: Setup iota sandbox using release version
      shell: bash
      if: ${{ inputs.version && !inputs.branch }}
      run: |
        mkdir iota-sandbox
        cd iota-sandbox
        mkdir sandbox
        cd sandbox
        # Use the output of https://api.github.com/repos/iotaledger/iota-sandbox/releases/
        if [[ "${{ inputs.version }}" == "latest" ]]; then
          DOWNLOAD_URL=$(curl "https://api.github.com/repos/iotaledger/iota-sandbox/releases/latest" | jq -r '.assets[] | select(.name | contains("iota_sandbox")) | .browser_download_url')
        else
          DOWNLOAD_URL=$(curl "https://api.github.com/repos/iotaledger/iota-sandbox/releases/tags/${{ inputs.version }}" | jq -r '.assets[] | select(.name | contains("iota_sandbox")) | .browser_download_url')
        fi
        echo "Downloading sandbox from $DOWNLOAD_URL"
        curl -L -o iota_sandbox.tar.gz $DOWNLOAD_URL
        tar -xf iota_sandbox.tar.gz
    - name: Setup iota sandbox using gitish version
      shell: bash
      if: ${{ inputs.branch }}
      run: |
        git clone https://github.com/iotaledger/iota-sandbox --branch ${{ inputs.branch }}
        cd iota-sandbox/sandbox
    - name: Overwrite protocol parameters
      shell: bash
      if: ${{ inputs.protocol_parameters }}
      run: |
        ls
        echo OVERWRITE
        cp -f ${{ inputs.protocol_parameters }} iota-sandbox/sandbox/protocol_parameters.json
    - name: Bootstrap and start sandbox
      working-directory: iota-sandbox/sandbox
      shell: bash
      run: |
        sudo ./bootstrap.sh
        docker compose up -d
    - name: Wait for faucet to start
      if: ${{ steps.faucet_check.outputs.is_faucet == 'true' }}
      shell: bash
      run: wget -qO- https://raw.githubusercontent.com/eficode/wait-for/$WAIT_FOR_VERSION/wait-for | sh -s -- -t 60 http://localhost/faucet/api/info -- echo "Faucet is up"
      env:
        WAIT_FOR_VERSION: d48601a8a90c3d22fade68d09b4240739fb44a46 # v2.2.4
